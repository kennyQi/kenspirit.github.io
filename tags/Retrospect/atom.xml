<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: Retrospect | Thinking in Crowd / 鹄思乱想]]></title>
  <link href="http://www.thinkingincrowd.me/tags/retrospect/atom.xml" rel="self"/>
  <link href="http://www.thinkingincrowd.me/"/>
  <updated>2014-03-30T09:44:43+08:00</updated>
  <id>http://www.thinkingincrowd.me/</id>
  <author>
    <name><![CDATA[鹄思乱想]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[2013 Retrospect and 2014 Goal Setting]]></title>
    <link href="http://www.thinkingincrowd.me/blog/2014/01/04/2013-retrospect-and-2014-goal-setting/"/>
    <updated>2014-01-04T08:00:00+08:00</updated>
    <id>http://www.thinkingincrowd.me/blog/2014/01/04/2013-retrospect-and-2014-goal-setting</id>
    <content type="html"><![CDATA[<h2>工作</h2>

<p>工作上没有什么太大的变动，可以说趋于平淡。对于项目基本框架的使用已经没有什么问题，所以主要已经是在忙于实现项目业务功能模块上。但是还是痛苦挣扎于一些框架的限制，跨部门的约束，低效率的流程上，感觉效能无法有效提升。</p>

<p>组内的新人，经历了一两年的成长，基本上能够独立做事情。不像以前那样，还没想清楚就乱写代码，有问题又不问，最后又推倒重来。技术水平有些提升，代码也好看了些，所以我的介入相对少了很多。但是还有待提高，特别是那些低级错误，类似变量命名上打错字的问题经常让我发现，这让我非常恼火。因为这足以侧面知道做事认真仔细程度到哪。</p>

<p>去年我主要的侧重是集中精力帮他们提升思考能力和业务理解上，最重要的是怎么去思考业务需求带来系统设计的要求。在组内尽量推动的 Peer Code Review，对成员间的沟通，业务的理解，技术的提高上确实有很大的帮助，今年要再加强。希望今年组内每个成员都达到一定水平后，整体效率可以有效提升。</p>

<p>从团队管理上来说，我并不是做得太好。由于我还要参于很多开发工作，能留给我做些流程或其它方面的改进的时间并不多。计划和进度上也并不是控制的很好，我也始终在看，究竟何时及如何引入 Kanban。看是否能够引入责任人机制，透明化流程，让每个人责任感更强和对计划进度上控制更好。</p>

<h2>自我提升</h2>

<h3>读书</h3>

<p>有些书去年积累到现在都还没有看，主要是技术类的。因为水平有限，技术类的书，用零散时间看的话，真的不容易吸收，特别是没有实践配合的话。所以一直用 Kindle 在零散时间还是看非技术类的多。</p>

<p>不过近期 Kindle 被我基本抛弃在一边了。不是不读书了，而是我已经抱着 MBA 随处边看书，边写代码了。这真是太爽了，虽然对我的颈椎好像有点伤害，不过，这确实可以让我边看书，边实践，榨取更多的时间来 Coding。所以今后将会多看技术类书和实践。</p>

<p><strong>技术类</strong></p>

<ul>
<li>Functional Programming for the Object-Oriented Programmer by Brian Marick</li>
<li><em>NOSQL Distilled by Pramod J. Sadalage, Martin Fowler</em></li>
<li><em>Patterns of Enterprise Application Development by Martin Fowler</em></li>
<li>Domain-Driven Design by Eric Evans</li>
<li><em>The Art of UNIX Programming by Eric S. Raymond</em></li>
</ul>


<p><strong>非技术类</strong></p>

<ul>
<li><em>The Lean Startup by Eric Ries</em></li>
<li>The Pragmatic Programmer by Andrew Hunt, David Thomas</li>
<li><em>Mythical Man-Month by Frederick P. Brooks</em></li>
<li><em>YouTube 创始人陈士俊自传</em></li>
<li><em>打造 Facebook by 王淮</em></li>
<li><em>至关重要的关系 by 李开复</em></li>
<li><em>MackTalk: 人生元编程 by 池建强</em></li>
</ul>


<p><em>注：斜体的已阅</em></p>

<p>今年在看和计划要看完的主要为以下三本最基础的技术书，尽量年内搞定。</p>

<ul>
<li>Structure and Interpretation of Computer Programs by Harold Abelson and Gerald Jay</li>
<li>Introduction to Algorithms by Thomas H Cormen</li>
<li>Algorithms 4th Edition by Robert Sedgewick and Kevin Wayne</li>
<li>Computer Systems &ndash; A Programmer&rsquo;s Perspective (2nd) by Bryant and O'Hallaron</li>
</ul>


<h3>打造关系网</h3>

<p>在看完《至关重要的关系》后，深有<a href="http://www.thinkingincrowd.me/blog/2013/06/29/startup-review-network/">感触</a>, 觉得之前并没有打造一个优质的职业和学习关系网，迫切渴望找到一些志同道合之人，可以一起学习进步。所以去年做了好几样事情：</p>

<ol>
<li>加入珠海 GDG，时不时去当一下志愿者和参加聚会</li>
<li>花血本从珠海飞北京参加了两次会议，一次是 AgileChina2013，一次是京JS。</li>
<li>约几个旧同事和好友，组织起来一起学习和交流</li>
</ol>


<p>几件事情下来，还是有点体会的。</p>

<p>首先，珠海 GDG 的参于还是挺让人兴奋的。参加者因为多为学生，演讲主题都主要是入门级的。真要按照营养上来说的话，对我受益不大。但是有机会认识大妈，刘鑫老师和其他一些组员还是挺高兴的，还让自己增添不少活力。不过以后要参加，就要尽量看能否上去做分享，而不是去听。</p>

<p>至于参加一些行业会议，我的目的本来就很坦然，就是看什么会议是值得去的，什么不值得。所以，目标完全实现。AgileChina2013 那次主要是要去听 David 亲自授课，所以感觉很好。后面的大会，因为讲的是方法论什么的多，这些不亲自实践是没办法了解的，而我近期主要攻技术，所以，敏捷这类大会就不会再去了。京JS 给我的感觉也还可以，虽然会议上难免各种对自己作品的广告，但是还是能和一些大神交流，了解他们的看法，新动向等，还是不错的，明年的 JS 大会应该还会去。经过这些行业会议，体会就是，你如果想和牛人有更多话题，让他们关注和看得起你，自己得先变成牛人。今看还是会留预算去参加一到两个这些会议，看几时能让别人看得起。</p>

<p>最后一个自我组织朋友来一起交流学习的事情，好坏参半。目前情况基本可以说告一段落。虽然大家有聚在一些玩了一些东西，但是感觉每个人的兴趣偏好和对聚会的期望都不尽相同，最后这个聚会基本可以说是失败的。但是中间也学习到不少，和知道自己想要什么。有些事情强求不来，步子迈大了就扯着蛋了。</p>

<h3>开源和项目</h3>

<p>本来是计划做一个 Pet Project，但是做一半后，像上面说的，想约三五朋友一起去做一个更大的东西，一个像 Salesforce 那样的一个 Multi-tenant 的企业系统。可惜没人搭理我，后面自己在考虑怎么在 MongoDB 动态分配空间，和实现了一下后，感觉这东西太大了，先放了下来，后面再找机会继续。</p>

<p>在学习和实践期间，做了两个小玩意出来，一个是用于在 Node.js 和浏览器共享代码的 <a href="https://github.com/kenspirit/webassemble">webassemble</a>, 还有一个是在 ExtJS 里面用 Promise 的 <a href="https://github.com/kenspirit/ExtPromise">ExtPromise</a>。前一个今年如果自己不做什么项目的话，估计使用就会比较少了。希望后一个能什么时候在公司项目里用上。</p>

<p>自己还算是开源的踊跃支持者的，并有幸被 AngularJS 接纳了一个 enhancemnt patch，非常高兴。今年看书以外如果有时间看源码，还会挑一些开源的 JS 项目来参于一下，目前考虑 AngularJS 和 React。</p>

<h2>时间安排</h2>

<p>学习时间：<br/>
基本上是按照去年的时间安排走。上下班车里的30分钟，还有其它一切可能的坐车时间，现在都在用 MBA 看书和写代码。早上5:30左右起来，一直到7点，大概1小时多点而已，周末时间长点。周末午休时间也大概有2小时。基本上就这么多了。</p>

<p>家庭时间：<br/>
和去年差不多，占个人时间大头。但是还是一个不懂怎么培养孩子的父亲，因为时间花在考虑怎么培养自己上面了。只希望给他带个好头，别学坏了就好。每每看到 Michelle 带她女儿体验什么，学习什么，各种惭愧。</p>

<p>锻炼时间：<br/>
中间有段时间断了一下，因为身体受伤，杂七杂八事情，没能很好坚持每天早上固定15分钟左右的锻炼时间。最近恢复，跳绳为主。今年还是得加强一下，身体是本钱。好玩的事情是人生第一次参加公司篮球比赛，虽然偶尔有上场，但主要是抱同组里年轻小伙的大腿，拿到人生的第一个第一名。</p>

<h2>善事</h2>

<p>这方面去年贡献不多，主要是个人精力不足，所以违背了去年美好的想法，每月固定给壹基金和联合国儿间基金会捐助一点。事后证明我行的确实是伪善。</p>

<h2>总结</h2>

<p>工作还凑合，仍需努力和把自己的爱好用在公司项目上。自己喜爱的东西，很难在公司派上用场，感觉真不太爽，看今后怎么操作吧。虽然已经在不断努力学习，也做了一些东西，但是离10000小时原则的强度和积累还是差太远了，今年必须更加努力。正如前面安排，把自己基础巩固好，希望后面能有效提升效能，不断参于开源，写 Blog 和分享总结。还有一件事就是希望可以做个有趣的人，从生活中找找灵感，看能做些什么好玩意没有，反正是随心写代码。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[至关重要的关系]]></title>
    <link href="http://www.thinkingincrowd.me/blog/2013/06/29/startup-review-network/"/>
    <updated>2013-06-29T07:59:00+08:00</updated>
    <id>http://www.thinkingincrowd.me/blog/2013/06/29/startup-review-network</id>
    <content type="html"><![CDATA[<p>经过<a href="http://www.thinkingincrowd.me/blog/2013/06/26/startup-review-permanent-beta/">前面</a>的自我打造后，现在就要建立<a href="http://www.amazon.cn/dp/B00COJ3CVY">至关重要的关系</a>了。</p>

<h2>比能力重要</h2>

<p>其实我本人对＂关系＂这个词自然而然的会持否定的态度，因为在很多地方，很多人靠不正当关系和手段，谋取职位或升迁。我不喜欢靠＂关系＂，所以才当程序员，才不去国企，和在小公司待那么久。但工作8年以来，我确实靠关系得到不少机会。正如书中所说：</p>

<blockquote><p>斯坦福大学组织行为学教杰弗瑞•菲弗 (Jeffrey Pfeffe) 搜集整理的证据表明人们在升职的时候，人际关系过硬以及与老板的友好关系比能力更重要。这并不是无法无天的任人唯亲和权术 (尽管有时候很不幸确实如此) ，这种做法有令人信服的理由：一个稍许平庸但能很好地处理人际关系并为团队做贡献的人比一个百分之百能力但无法进行团队合作的人对公司更有利。</p></blockquote>

<p>不过这些必须是靠能力建立起来的过硬的关系，要不然就真的是＂不正当关系＂了，并不能持久。</p>

<h2>如何建立</h2>

<h3>被动式</h3>

<p>如果你懒得建立与维护人脉，那就用 <em>@蔡学墉</em> 一段微博总结的方法吧：</p>

<blockquote><p>设法让自己能力强大，把自己变成值得被他人所利用的资源。这么一来，虽然不一定过得太好，但肯定不会过得太差。</p></blockquote>

<h3>付出</h3>

<p>我之前建立的关系，虽然不是完全这样被动式，但也只是在工作中，任劳任怨，努力把自己变优秀，树立好的形象，并主动帮助别人，分享自己的知识。我之前并不觉得有什么特别，但看了这本书后，才知道其实已经用了书中说的最好的方法，就是<strong>真心帮助别人</strong>。日前，一位其实和我并不太熟悉的旧同事，在跳槽的时候，竟然打电话给我，咨询我的意见，这真是让我觉得颇为惊讶。回头一想，自己能被当作值得信赖或听取一点建议的对象，几年的努力，值得了。</p>

<h3>不烦人</h3>

<p>一直以来，我都没有刻意去扩大自己的网络。除了因为上面说的一些偏见和我确实认为我没什么技巧去做这些事情外，其实我是内向型的人，就是别人没有对我表示出善意的情况下，我是基本不会先迈出第一步的，还有我很怕会烦到别人。</p>

<p>但书中其实有说：</p>

<blockquote><p>你一点也不烦人。</p>

<p>如果说巩固某段关系最好的办法是帮助对方，那么位居第二的方法就是接受对方的帮助。正如本•富兰克林曾说过的：＂如果你想交朋友，让别人帮你个小忙。＂</p></blockquote>

<p>所以呢，我决定今后多一点去＂打搅＂一些人。各位要有心里准备哦。</p>

<h2>优质关系网</h2>

<p>人际关系理论中有个很出名的邓巴数 (Dunbar&rsquo;s number)，说的是我们每个人可以维持的关系数目最多不超过150个。而且还有个六度分隔理论，就是平均只要通过六个人，你就可以联系到地球上任何一个人。</p>

<p>虽然说六度分隔理论，理论上可以让你联系到任何人，但其实链条后面一些关系并不能对你的事业起什么大的作用。能极大影响你的事业和获取信息的是人际关系是前三层，就是一直延伸到你的好朋友(第一层)的好朋友(第二层)的好朋友(第三层)。所以，如果邓巴数里说的主要是你的第一层强关系，算上之后两层的话，你的关系网络数目会远大于邓巴数。这三层中彼此之间都有至少一个强关系纽带，相互认识和引荐的可能性非常高，因为彼此有足够了解和信任。当然强关系中很多是重合的，就是你好朋友的好朋友本来就是你的好朋友。而且可能你们的圈子相近，那么他们获取的信息，可能你也知道了的。</p>

<p>所以书中提及另一种关系 &ndash; 弱关系，既是那些和你接触不多的人。它比强关系占优的地方是可能可以给你提供额外消息来源。所以如果要结合两种优点，我们必须尝试寻找一些其他圈子来建立强关系，这就需要我们去参加一些社团之类的活动了。</p>

<p>所以，基于自己在这方面的短板，我也已经尝试去参加一些行业会议，社区和非自己行业但感兴趣的活动群体，比如英语学习的。我也正在尝试围绕自己，寻找志同道合者，建立一个分享机遇和资源的网络。其实要打造一个网络很难，我一直想做，但都没能做好。鹄言乱语社区刚筹备，看能否得到各位好友支持了。</p>

<p>优质网络的基本要求：</p>

<blockquote><p>第一，每个人都很优秀。<br/>
第二，每个群体都有一个共同特征，&hellip; 指引大家走到一起。<br/>
第三，地理密度也很重要。<br/>
第四，分享和合作风气浓厚。</p></blockquote>

<p>从实际情况看，这种优质网络的起源，基本都是在同一公司干过，并同甘共苦之人，比如著名的 PayPal 黑手党。所以，恰当的跳槽，对打造网络也是有好处的。</p>

<h2>机遇</h2>

<p>如果能力上来了，而且关系网能基本建立起来，机会就会逐渐来临了。</p>

<blockquote><p>企业家博•皮博迪 (Bo Peabody) 曾说过：＂让幸运来临的最好做法是确保很多事情发生。＂</p></blockquote>

<p>所以说，<strong>机会给有准备的人</strong>，我觉得其实一方面的意思是你要通过自己不断地努力尝试，去主动制造而来的。</p>

<p>有了机会，其实等于你面前多了一项选择。那你选择什么，是否决定承担某种风险而改变原来的规划，就涉及到风险评估了。</p>

<h2>风险</h2>

<p>我个人应该是偏保守的，做事情都想得比较多，看哪种选择能带来最大好处。而且比较犹豫，不够果断。因为我比较怕有什么风险。但其实我们通常会高估风险 (可能不适用于一些盲目炒股人士，呵呵) 。</p>

<blockquote><p>神经心理学家里奇•汉森 (Rich Hanson) 是这么说的：＂为了让我们的祖先存活，大自然母亲会时不时地玩弄一下他们，让他们犯三个错误：过高估计风险、过低估计机遇、过低估计资源 (资源是用来应对风险、好好利用机遇的) 。＂</p></blockquote>

<p>一般希望稳定的人，都不希望有变动。但这有可能恰恰是更危险的。所以，个人认为所谓稳定的公务员，国企什么的，一些没什么解聘机制的单位，将来风险很高。我们一定要有永久测试心态，适时变动。</p>

<blockquote><p>从短期来看，变动少其实也是一种稳定。从长期来看，变动少很容易导致不堪一击，因为它会减弱系统对突发状况的应对能力。</p></blockquote>

<p>还有就是一般认为，有多几种后备方案，风险就小点。但其实这和<a href="http://www.thinkingincrowd.me/blog/2013/06/26/startup-review-permanent-beta/">前面</a>说到的＂粗糙＂的心是相违背的。正如我们学习编程语言，如果说打算学学这，学学那，然后什么工作都能找到的话，往往是什么工作都找不到。</p>

<blockquote><p>＂保留多重选择＂实际上比专心将一项计划付诸实践更具有风险。</p></blockquote>

<p>回首自己工作来最大的机遇，可能是之前一位旧老板邀请我去上海和他创业。不过当时放不下另一个在香港的机遇，因为当时自我定位不同，对旧公司的忠心，和对家人的考虑，没接受，有点遗憾。因为在珠海确实没什么 IT 氛围和环境，对自我成长有比较大的约束。但其实也没有后悔，因为家人还是最重要的，继续在自己可接受风险范围寻求突破吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[永久测试之心, 寻求真我]]></title>
    <link href="http://www.thinkingincrowd.me/blog/2013/06/26/startup-review-permanent-beta/"/>
    <updated>2013-06-26T06:39:00+08:00</updated>
    <id>http://www.thinkingincrowd.me/blog/2013/06/26/startup-review-permanent-beta</id>
    <content type="html"><![CDATA[<p>最近看了李开复作序的书：<a href="http://www.amazon.cn/dp/B00COJ3CVY">至关重要的关系</a>，也就是<a href="http://www.amazon.com/dp/B008NXKYNO">THE START-UP OF YOU</a>的译本。书的英文原名和它的意图其实想说明的是，每个人其实都是和企业家一样，具备相同的特质。</p>

<blockquote><p>广义的企业家精神：自主独立，足智多谋，满怀抱负，灵活变通，并拥有广泛的人脉。企业家精神是一种生活态度，而不是一个商业概念；是伴随一生的观念，而不只是某一代人的想法。</p></blockquote>

<p>这本是 <a href="www.linkedin.com">LinkedIn</a> 创始人 Reid Hoffman 和 硅谷企业家 Ben Casnocha 一起写的书。其实书的内容并不只讲述如何建立重要的人际网络关系，还阐明当前变幻无常的职业环境下，怎么样才能保持竞争力。不知道怎么译成中文书名，就变成只突出关系了，可能为了迎合国内对关系的依赖心理吧。</p>

<blockquote><p>你的竞争优势是由三种各不相同且不断变化的力量相互作用而形成的：你的资产、你的追求/价值观和市场现实，即你的综合能力在竞争市场的供应状况。</p></blockquote>

<h2>真我，追求</h2>

<p>书中一段让我非常有感触：</p>

<blockquote><p>你的内心不存在能通过自省发现并为你指明正确方向的＂真我＂。是的，你的追求塑造了你所做的事，但是追求本身就受到你的行动和经历的限制。个性不是你找到的，而是自己浮现的。</p></blockquote>

<p>其实我一直想通过自省来寻找到自我，但发觉真的太难了。身边也缺乏很好的 Mentor，所以一直感觉有点迷茫。我到底应该怎么前行呢？直到看完上面那段话后，终于可以释怀了。回想起前段日子看到 <em>@玉伯也叫射雕</em> 说的＂心要粗糙点＂，<em>@周鸿玮</em> 的这篇<a href="http://m.blog.sina.com.cn/s/blog_49f9228d0101c9pr.html?retcode=0">不喜欢的工作，可能通往一个崭新世界</a>，和自己迷茫前走过的路程，也确实是这么走过来的。</p>

<p>高考时我就是想考计算机专业，没什么理由。毕业时就是想转行从事软件开发，而不是专业的电子方向 (没考上计算机)。还有就是大学时出国留学的想法以至狂学 TOEFL 和 GRE。 至今我也不知道当时为什么这么想，只是有点一根筋的感觉。</p>

<p>之前的工作生涯，领导让做什么我就做什么，说去哪个项目就到哪去，不挑活，只认真干。当时的＂真我＂就是做 BA 或者 Consultant (以前感觉那种职位比码农高级点，现在发现沟通和需求分析根本就是码农必备技能)，而且公司也是主靠这部分业务，所以个人在公司发展可以说一帆风顺。快速学习和解决问题的能力，抗压能力，良好沟通能力也同时在这样情况下培养出来。</p>

<h2>永久测试之心</h2>

<blockquote><p>把职业始终保持在测试阶段，可以强迫自己承认自身还有缺陷，还存在发展空间，还需要适应和进步。不过，这种心态也十分乐观，因为这意味着你有能力改善自己，同时也有能力改变周围的世界。</p></blockquote>

<p>永久测试其实是对非常流行的观点＂我们必须找到自己心中真正的优势和渴望做的事情，然后坚持不懈的努力下去，终将取得非凡成就＂进行必要的一些补充和修订。</p>

<p>虽然如上面所说，自我/价值观需要坚定的去追求，但它也不是一成不变的。因为一开始我们的追求可能是空泛的，含糊的，没有具体步骤和验证过的。我们有时可能只是想当然认为自己想做什么，可以做什么，但不知道能不能做或怎么做。所以必须在实践中验证，也就是不断测试调整的一个过程。</p>

<p>永久测试其实也是应对市场现实而提出的要求。如果你的优势和能力，并没有市场需求的话也是白搭。其实这个观点和 <a href="http://www.amazon.com/dp/0307887898">LEAN STARTUP</a> 里面的 Build-Measure-Learn 这样一个反馈循环正是异曲同工之处。因为我们面对的是迅速变化的市场和趋势，我们必须像打造一个产品一样，不断测试我们身上的技能是否还满足市场的需求。</p>

<p>之前从一家毕业后一直工作了7年的公司离职，除了公司一些长久问题，个人已经不太抱希望管理层能解决外，也是感觉需要去外面的世界看看，测试一下自己能否适应市场的需求。后来面试发现，在珠海这个地方，需要多面手的地方不多，自己看重的广泛技能，英语，沟通和快速学习能力并没多少人欣赏。招聘方看你那么多年经验，基本就是看你在他们想要的技术方面，能深入多少，因为他们多数要的是专才。</p>

<p>但这却是我的短板。我并没哪项技术钻研的很深，脚踏的不够坚实。其实我之前也一直缺乏一定自信，总觉得底气不够。所以，我也就正好调整了一下＂真我＂，决心专攻某一样技术，JS。今后嘛，还是保持一颗<strong>钝</strong>和<strong>粗糙</strong>的心，坚持下去并测试以验证之。</p>

<blockquote><p>在任何情况下，能够检验我们设想的是行动而非计划。只有在实践过程中才能找到自己努力的方向以及方法。</p></blockquote>

<h2>ABZ计划</h2>

<p>这是作者提出来的一种规划手段。</p>

<ul>
<li>A计划：是我们目前从事的事业，一个我们发挥竞争优势的地方。但是在计划执行过程中，我们还是需要时刻根据情况微调，还有试探性寻求B计划。</li>
<li>B计划：在执行A计划途中，如果发现目标或实现途径出现比较大的变化，甚至说客观环境发生重大变动等，就要跳到B计划了。但是B计划从哪冒出来的？其实在不断学习和调整方向中得到。它应该是和A计划不同但相关的方向。最好的方式是在执行A计划同时，从兼职开始做起，试探性去尝试一些想法。这个计划不是仔细计划出来的，而是摸索出来的。</li>
<li>Z计划：这已经是我们的最差打算了。就是万一失业了，什么都没有了，我们可以怎么做？银行剩下的钱可以支撑多少个月没工作？这段时间是否足够学新技能？</li>
</ul>


<p>其实作者强调的就是<strong>不断学习，寻找和调整方向，而且确保有救生方案支撑转变</strong>。</p>

<h2>确立身份</h2>

<blockquote><p>我们应该确立一种身份地位，使其不受老板、地域以及行业的影响。</p></blockquote>

<p>这也是文章里让我觉得很重要的一句。因为当今，及往后的职业发展环境，是＂横向＂忠于职业，而非＂纵向＂忠于老板。当然这并非说朝三暮四，到处跳槽。因为无论在哪就职，为所在企业全力拼搏，也是提高自我竞争力，打造人脉的关键。而作者想强调的是，因为世界变化太快了，每个企业，每个行业都有可能发生巨大变化和转折点，比如数码相机的到来导致柯达的没落；智能手机的出现，使得 Nokia 被抛离。所以这种独立于老板，甚至是行业的自身技能身份定位，为日后应对市场变化非常重要。</p>

<p>所以，对于我们从事 IT 的人来说，写个博客，多参于一些开源项目和活动，做些工作外的作品，是很有必要的。</p>

<p>确保自身技能跟得上变化后，剩下的就是关系问题了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2012 Retrospect and 2013 Goal Setting]]></title>
    <link href="http://www.thinkingincrowd.me/blog/2013/02/05/2012-retrospect-and-2013-goal-setting/"/>
    <updated>2013-02-05T22:37:00+08:00</updated>
    <id>http://www.thinkingincrowd.me/blog/2013/02/05/2012-retrospect-and-2013-goal-setting</id>
    <content type="html"><![CDATA[<p>现在写年终总结和新年展望似乎有点晚。其实我是习惯按农历年附近划分的，呵呵。开玩笑，因为前段时间忙前面两篇Blog，并且去年比较大的转折事件也算是农历年后开始，那就歪打正着吧。</p>

<h2>翻墙</h2>

<p>比较大的事件就是这个。难的换工作后有机会肉体翻墙，去拜访了万恶的资本主义老大 &ndash; 美国，还真见识了一把。蔚蓝的天空，PM2.5超低的空气，见人即停的车，真让人羡慕嫉妒恨，更加强了我内心深处的出国欲望。可惜家庭的顾虑和牵挂已经无法轻易撇去，只能留它作为追寻的梦想，不断激励自身奋斗，以应付未来这个诡异的国度的各种变化。</p>

<h2>工作</h2>

<p>本来换工作主要目的就是转攻前端，可是计划赶不上变化，翻墙的代价就是去熟悉后台相应开发技术。所以，过去一年，在部门里还主要是负责 JAVA 开发。编码和设计功底变化不大，只是要适应新框架和在框架的限制内做最有效的挣扎。本是小角色一名，只需专心写代码。后来人士变动，变成 Sub-group lead，发现开会时间暴增，写代码时间变少，碎片化。无效率的开会真是万恶之源。</p>

<p>去年技术方面成长速度并不太理想。要熟悉新框架，新业务，新团队，和新项目起步各种混乱，还有各种会议，让我各方面耗费不少时间。思考和学习如何敏捷，如何不断寻找可改进领域，有效推进事情而尽可能少侵犯既有利益团体可以说是对技术成长缓慢的补偿。要在大公司里推进一些事情，真是比小团队难多了。只能从自身，从小，从内部做起。</p>

<p>明年听说有点变动。老板理想很美好，关键看流程和各部门如何相应变革协调，而这正是当前主要问题所在。碰到转变的契机可不容易，无论是好是坏，都可学习到东西。我就拭目以待，并尽全力推进，看事态如何发展再说吧。</p>

<p>个人方面，明年希望做事可以更有效率，看能否借助自己正在做的 Pet Project 来帮助管理和理清自己的时间花在什么地方和更好的榨取之。在技术和团队上，已经基本和 Team Lead 沟通过，未来可能主要负责注重项目整体技术和设计，希望推动引入防打扰时间，Code Review，CI 持续集成等。</p>

<h2>看书，学习</h2>

<p>一直以来，都尽量找时间用 Kindle 看书。只是突然从看盗版PDF，变成乐意去购买原版。虽然花了我不少银子，可是心里舒坦。也觉得作为知识工作者，应该尊重其他人的劳动成果。回头如果未来自己有什么产出，同样希望得到回报。去年一下买了不少书，主要因为之前两三年从老婆怀孕到照顾儿子期间，学习少了，积累不少书债。加之不少好书涌出和推荐，一下忍不了手。下面是主要书单：</p>

<p><strong>技术类</strong></p>

<ul>
<li>Functional Programming for the Object-Oriented Programmer by Brian Marick</li>
<li>NOSQL Distilled by Pramod J. Sadalage, Martin Fowler</li>
<li>Patterns of Enterprise Application Development by Martin Fowler</li>
<li>Domain-Driven Design by Eric Evans</li>
<li>The Art of UNIX Programming by Eric S. Raymond</li>
<li><em>Async JavaScript by Trevor Burnham</em></li>
<li><em>JavaScript: The Good Parts by Douglas Crockford</em></li>
<li><em>Stylin' with CSS by Charles Wyke-Smith</em></li>
</ul>


<p><strong>非技术类</strong></p>

<ul>
<li>The Lean Startup by Eric Ries</li>
<li>The Pragmatic Programmer by Andrew Hunt, David Thomas</li>
<li>Mythical Man-Month by Frederick P. Brooks</li>
<li><em>Kanban by David J. Anderson</em></li>
<li><em>More Joel on Software by Joel Spolsky</em></li>
<li><em>Getting Real by Jason Fried</em></li>
<li><em>Rework by Jason Fried</em></li>
<li><em>Driving Technical Change by Terrence Ryan</em></li>
<li><em>Hackers and Painters by Paul Graham</em></li>
</ul>


<p><em>注：斜体的已经看了</em></p>

<p>个人感觉书看的有点快，多少有点囫囵吞枣的感觉。可能是书债太多，怕看少了跟不上时代了，呵呵。其实还有一部分想法是，首先初读，让大脑先接触多领域的思想和知识，然后再精读，反复读，并且在实践中结合，才能吸收和强化理解。无论是技术类或非技术类的方法论书籍，不尝试去自己写代码，不实践方法，是无法体会的。第一遍，要大概了解里面主要讲到什么点和最感触的是什么，以便日常工作学习实践。然后再精读来慢慢巩固吸收。好书，读三遍也不为过。</p>

<p>之前看的是非技术类书多点，因为利用零散的时间来看书的话，看技术类的，不容易入脑。这个月再争取看完 The Lean Startup 和 Mythical Man-Month，然后集中精力看剩下的技术类书。日后为了巩固知识和真正理解，看完一本书必须写写心得和书评。</p>

<p>技术方面的学习，只要还是集中在前端，Javascript 和 Functional Programming 方面。目前主要是利用 Pet Project 来摆弄一下 AngularJS，MongoDB 和 NodeJS。</p>

<h2>时间安排</h2>

<p>学习时间：<br/>
零散时间基本就只有平时上下班车里的30分钟，还有其它一切可能的坐车时间。这些时间都是用来看书，写 Blog，或者看看 Google Reader，微博。连续的时间最多只在早上。由于家人比较早睡觉，大概9:30-10:00就休息了，所以我也只能早睡早起以避免打扰。早上4:30-5:00期间起床，洗漱15分钟，到6:45分基本有1.5小时，周末的话，家人比较晚起，可以有2小时。这段时间主要先用30分钟左右看看微博，或者书。再写写代码。最后还有周末午休时间，大概3小时，也主要用来写代码或者Blog。</p>

<p>家庭时间：<br/>
其实就是在我工作和学习之外的几乎所有时间支出了。或者应该说是在工作和家庭时间之外的所有时间，我再榨取出我的学习时间。优先级来说，还是以家庭优先。这里主要用在陪伴儿子上面。每晚陪他玩一玩，下下棋，周末出去逛逛，接触一下户外，基本就这样过了。还没什么特定模式和游戏来开发他的智力潜能什么的。这个老爸还是有点懒，明年看看有什么可以改进的。为人父母真的不容易，压力山大啊。</p>

<p>锻炼时间：<br/>
每天早上固定15分钟左右，跳绳，哑铃，俯卧撑，仰卧起坐等。不过最近运动减少，因为前段时间儿子生病没有上幼儿园，老妈腰也不舒服，所以要帮忙做饭买菜什么的，再加上有时自己在学习时又放不下手，就忽略了点。明年还是得加强一下，学习也不差那15分钟了。</p>

<h2>善事</h2>

<p>公益组织方面，现在是月捐150元给世界儿童组织，因为好像已经没有什么公益组织可以信得过了。壹基金之前也通过招行信用卡月捐了一年。后来因为卡太多而取消了，明年看要不要其它途径重启一下。个人方面，之前看到一个江门的人，老婆有血液病，艰难的生了个健康的小孩出来。但是他老婆的病还没钱做手术，拖延着治疗着。详情可以看<a href="http://t.cn/zjBs02D">江门日报</a>和她老婆的<a href="http://weibo.com/u/2785731123">微博</a>。 连续几个月捐了些吧，只是一个人也撑不了太长时间，就也帮她在微博宣传一下。谁有心的，也可以帮助一下。</p>

<p>我的帮助原则是，个人优于组织。已经在微博上被很多大人物推广出来的，我就不捐了，因为他们已经得到很多关注。困难的是一些没有办法得到别人更多关注的普通人，特别是没什么文化的。我关注的对象主要是一些父母或者小朋友。毕竟为人父亲，懂得家庭责任和有困难的痛处。</p>

<p>其实实际意义上来说，我做的也并不算什么善事。可能还只是伪善，出了点钱，安慰一下自己。本来也想像 Ailsa 她们那样去探访一些需要帮助的人，只是还是私心重些，希望陪家人多点。像她那样初为人母，还这样不遗余力，才是真善。我那个相形见绌。等儿子在老家放假时再参于一下吧。其实我本来是有计划想等儿子长大点，找个家附近或者珠海的需要帮助的人，除了捐钱外，还可以时不时带儿子去探望一下，也可以教育他，让他懂得怜爱和帮助别人。明年再看看这想法能不能实施。</p>

<h2>总结</h2>

<p>工作还凑合，总体得到肯定。有些想法，因为有家在身，顾虑太多，已经不容易实施。我是一个顾家的人，那些舍家人而出去闯的事，不是不想，只是做不出来。不过，也不甘虚度日子，不断努力学习技术是王道，也为日后万一所需。为实践10000小时原则，还需要下不少功夫。看书还需要继续，但是要更专注和深入理解别人的思想以融为已用。在做的 Pet Project 5月前要做出来。当然还是要继续写 Blog 来做分享和总结。总体来说，没什么大成就。对自己而言，也算是已经尽最大努力平衡家庭，工作和学习。</p>

<p>最后祝支持我的家人和朋友们新年如意，身体健康。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[为什么开始写技术博客, 并且还是用英语?]]></title>
    <link href="http://www.thinkingincrowd.me/blog/2013/01/01/why-i-start-blogging-and-in-english/"/>
    <updated>2013-01-01T22:00:00+08:00</updated>
    <id>http://www.thinkingincrowd.me/blog/2013/01/01/why-i-start-blogging-and-in-english</id>
    <content type="html"><![CDATA[<p>一些朋友发现我最近在写一些博客，而且还多数是英语的，都在好奇我在搞什么。那我就写一篇博客来解释一下吧。</p>

<p>写技术博客好处很多，很多牛人也提到过, 这是我出来刚工作时的一位同事的<a href="http://www.iamhukai.com/">博客</a>, 现在他在Thoughworks, 里面有好几篇文章说到为什么要写和怎么写。</p>

<h2>写技术博客的原因</h2>

<ul>
<li><p><strong>写博客可以积累总结自己的一些想法，见证技术学习过程和成长的经历</strong>。所以，我博客里的内容，一般应该会是技术类文章多一点，当然也会有一些开发过程和管理的想法及吐槽。写博客就是一种总结的手段，对自己知识的回顾和梳理。</p></li>
<li><p><strong>博客是一种对外沟通交友，甚至是宣扬思想和文化的平台，说点实际的还可以为自己打广告</strong>。人生在世，总希望找到些志同道合的朋友。这些朋友有生活上的，情感上的，也有事业上的。博客也可以说是为我寻找事业上的朋友的地方之一。</p></li>
<li><p><strong>为后来人积累一些财富，帮助他人解决一些问题</strong>。我已经习惯在Google和别人的博客上索取了那么长时间了，是时候贡献自己的力量的时候了。把自己遇到的一些问题，最终的解决方案，想法分享出来，应该可以帮助一些后来人。也许有人觉得自己遇到的困难和解决方法太微不足道了，说出来让人笑话。其实不然，每个人都有成长过程，像我们也要去获取别人的智慧一样，我们要帮助的就是那些还没有起来的人。而且，也别太小看自己了。</p></li>
</ul>


<h2>用英语的原因</h2>

<p>也许有不少人觉得我在装13，卖弄自己的英语水平。而且我觉得, 用英语写博客, 可能会使得博客流量不高, 正如我那位旧同事所说。那么，我为什么还这么做呢？</p>

<ul>
<li><p>我确实英语水平比中文好，我也喜欢英语多过中文。很多人看到这可能会说我卖国贼，呵呵。其实为什么呢？我从小语文水平都不高，60到70分左右吧，作文也差。对以前的语文课，我完全感受不到语言的美丽。各种什么作者观点分析，文言文等，搞得我对语文很反感，遇到的语文老师，又没几个好的，反正学习语文对我来说充满了挫折感。</p>

<p>  我是在六年级就开始学英语，但那时是用中文来模拟发音和死记的。我记得刚上初中的时候，第一次测验才40多分的。但后来水平一直都不算差，我也不知道为什么。不过使我喜欢上英语的，是因为在大学梦想出国留学，疯狂学英语，考TOEFL和GRE，才喜欢上了，也使得自己水平比附近的人要高。学英语对我来说，充满了成功和优越感。所以，培养成功的感觉，可能真的很重要。为什么同样是语言，学英语我会比学语文好？可能TOEFL和GRE考试都强调的是事实和逻辑推理，不像语文那些什么观点分析那么狗屁吧。</p>

<p>  至于现在，我还那么喜欢英语，我想是延续之前的情结，以及从事IT的缘故吧。所有先进的技术，一开始都从国外发源起来，不懂英语，怎么行呢？</p></li>
<li><p>我现在主要的工作，还是编程。编程用什么语言？废话，当然是英语。大家看过<a href="http://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882">Clean Code</a>这本书吗？ 什么叫做<em>Self-Documentary</em>的代码？ 不知道的，看书去。为了能写出清晰，优雅，具有自我说明能力的代码，命名一个变量，一个方法，都是有讲究的，如果一段代码，读起来像读文章一样，那就成功了一大半了。</p>

<p>  而且，在<a href="http://www.amazon.com/More-Joel-Software-Occasionally-Developers/dp/B002KE5SLU/ref=sr_1_1?ie=UTF8&amp;qid=1357050792&amp;sr=8-1&amp;keywords=More+Joel+on+Software">More Joel on Software</a>, 也就是<a href="http://book.douban.com/subject/4163938/">软件随想录</a> 这本书里面，在<em>Learn how to write before graduating</em>这一节里面说到：</p></li>
</ul>


<blockquote><p>the programmers with the most power and influence are the ones who can write and speaks in English clearly, convincingly, and comfortably,</p>

<p>&hellip;</p>

<p>The difference between a tolerable programmer and a great programmer is not how many languages they know, and it&rsquo;s not whether they prefer Python or Java.  It&rsquo;s whether they can communicate their ideas.</p></blockquote>

<p>所以，锻炼用英语来写博客，主要是提高自己的代码编写能力和成为一名好的程序员。</p>

<p>好了, 我已经起航了, 你们是否也考虑考虑写写博客?</p>
]]></content>
  </entry>
  
</feed>
